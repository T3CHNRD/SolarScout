<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Energy Usage Calculator</title>
    <style>
        * { box-sizing: border-box; margin: 0; padding: 0; }
        body { font-family: Arial, sans-serif; line-height: 1.6; padding: 20px; background-color: #f5f5f5; }
        .card { background: white; border-radius: 8px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); max-width: 1200px; margin: 0 auto; padding: 20px; }
        .header-buttons { display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; }
        .btn { padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer; font-weight: 500; transition: background-color 0.3s; text-decoration: none; }
        .btn-home { background-color: #2c3e50; color: white; }
        .btn-reset { background-color: #e74c3c; color: white; }
        .btn:hover { opacity: 0.9; }
        .section-title { font-size: 1.2em; color: #2c3e50; margin: 20px 0 10px; border-bottom: 2px solid #eee; }
        .rates-container { background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px; }
        .time-selection { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin-bottom: 20px; }
        .time-block { background-color: #fff; padding: 15px; border-radius: 8px; box-shadow: 0 1px 3px rgba(0,0,0,0.1); }
        .time-block.active-peak { background-color: #fff3e0; border-left: 4px solid #ff9800; }
        .time-block.active-offpeak { background-color: #e3f2fd; border-left: 4px solid #2196f3; }
        .input-group { margin-bottom: 15px; }
        .legend { display: flex; gap: 20px; padding: 10px; background-color: #fff; border-radius: 4px; }
        .legend-item { display: flex; align-items: center; gap: 8px; }
        .legend-color { width: 20px; height: 20px; border-radius: 4px; }
        .legend-peak { background-color: #ffad33; border: 1px solid #ff9800; }
        .legend-offpeak { background-color: #6eb8f4; border: 1px solid #2196f3; }
        .results { margin-top: 20px; padding: 20px; background-color: #e3f2fd; border-radius: 8px; }
        .disclaimer { margin-top: 20px; padding: 15px; background-color: #fff3cd; border: 1px solid #ffeeba; border-radius: 4px; color: #856404; text-align: center; }
        .validation-message { color: #e74c3c; font-size: 12px; display: none; }
        .shake { animation: shake 0.3s; }
        .cost-peak { color: #ff9800; font-weight: bold; }
        .cost-offpeak { color: #2196f3; font-weight: bold; }
        @keyframes shake { 0%, 100% { transform: translateX(0); } 25% { transform: translateX(-5px); } 50% { transform: translateX(5px); } 75% { transform: translateX(-5px); } }
    </style>
</head>
<body>
    <div class="card">
        <div class="header-buttons">
            <a href="index.html" class="btn btn-home">‚Üê Back to Home</a>
            <button id="resetButton" class="btn btn-reset">Reset Calculator</button>
        </div>
        <h1 class="section-title">Energy Usage Calculator</h1>
        <div class="legend">
            <div class="legend-item"><div class="legend-color legend-peak"></div><span>Peak Hours</span></div>
            <div class="legend-item"><div class="legend-color legend-offpeak"></div><span>Off-Peak Hours</span></div>
        </div>
        <div class="rates-container">
            <h2 class="section-title">Rate Settings</h2>
            <div class="input-group">
                <label for="peakRate">Peak Rate (cents/kWh)</label>
                <input type="number" id="peakRate" placeholder="e.g., 28.5" min="0" step="0.01">
                <div class="validation-message" id="peakRateValidation"></div>
            </div>
            <div class="input-group">
                <label for="offPeakRate">Off-Peak Rate (cents/kWh)</label>
                <input type="number" id="offPeakRate" placeholder="e.g., 18.5" min="0" step="0.01">
                <div class="validation-message" id="offPeakRateValidation"></div>
            </div>
        </div>
        <div class="time-selection">
            <div class="time-block">
                <div class="time-label">Peak Hours Start</div>
                <div class="input-group">
                    <select id="peakStartHour">${generateHourOptions()}</select>
                    <select id="peakStartMinute">${generateMinuteOptions()}</select>
                    <select id="peakStartPeriod"><option value="AM">AM</option><option value="PM">PM</option></select>
                </div>
            </div>
            <div class="time-block">
                <div class="time-label">Peak Hours End</div>
                <div class="input-group">
                    <select id="peakEndHour">${generateHourOptions()}</select>
                    <select id="peakEndMinute">${generateMinuteOptions()}</select>
                    <select id="peakEndPeriod"><option value="AM">AM</option><option value="PM">PM</option></select>
                </div>
            </div>
        </div>
        <h2 class="section-title">Monthly Usage Input</h2>
        <div class="months-grid" id="monthsGrid"></div>
        <div class="results" id="results">
            <div id="totalUsage"></div>
            <div id="peakUsage" class="cost-peak"></div>
            <div id="offPeakUsage" class="cost-offpeak"></div>
            <div id="peakCost" class="cost-peak"></div>
            <div id="offPeakCost" class="cost-offpeak"></div>
            <div id="totalCost" class="total-cost"></div>
            <div class="disclaimer">Please note: Calculations are estimates and may not be 100% accurate.</div>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
            const monthsGrid = document.getElementById('monthsGrid');
            months.forEach(month => {
                const div = document.createElement('div');
                div.className = 'input-group';
                div.innerHTML = `<label for="${month}">${month}</label><input type="number" id="${month}" placeholder="Enter kWh" min="0"><div class="validation-message" id="${month}Validation"></div>`;
                monthsGrid.appendChild(div);
            });

            function validateInput(input) {
                const value = Number(input.value);
                const validationElement = document.getElementById(`${input.id}Validation`);
                let isValid = true;
                if (value < 0) { validationElement.textContent = "Value cannot be negative"; isValid = false; }
                else if (input.id.includes('Rate') && value > 100) { validationElement.textContent = "Rate seems unusually high."; isValid = false; }
                else if (months.includes(input.id) && value > 10000) { validationElement.textContent = "Usage seems unusually high."; isValid = false; }
                validationElement.style.display = isValid ? "none" : "block";
                if (!isValid) input.classList.add("shake");
                setTimeout(() => input.classList.remove("shake"), 300);
                return isValid;
            }

            function calculateTotal() { return months.reduce((sum, month) => sum + (Number(document.getElementById(month).value) || 0), 0); }
            function calculateCost(usage, rate) { return usage * (rate / 100); }

            function updateResults() {
                let allInputsValid = true;
                document.querySelectorAll('input').forEach(input => { if (!validateInput(input)) allInputsValid = false; });
                if (!allInputsValid) return;

                const totalUsage = calculateTotal();
                const peakRate = document.getElementById('peakRate').value;
                const offPeakRate = document.getElementById('offPeakRate').value;

                document.getElementById('totalUsage').textContent = `Total Yearly Usage: ${totalUsage.toLocaleString()} kWh`;

                if (peakRate) { document.getElementById('peakCost').textContent = `Peak Rate Cost: $${calculateCost(totalUsage, peakRate).toFixed(2)}`; }
                if (offPeakRate) { document.getElementById('offPeakCost').textContent = `Off-Peak Rate Cost: $${calculateCost(totalUsage, offPeakRate).toFixed(2)}`; }
                if (peakRate && offPeakRate) {
                    const totalCost = calculateCost(totalUsage, peakRate) + calculateCost(totalUsage, offPeakRate);
                    document.getElementById('totalCost').textContent = `Total Combined Cost: $${totalCost.toFixed(2)}`;
                }
            }

            function generateHourOptions() {
                let options = '';
                for (let hour = 1; hour <= 12; hour++) options += `<option value="${hour}">${hour}</option>`;
                return options;
            }

            function generateMinuteOptions() {
                return `<option value="00">00</option><option value="15">15</option><option value="30">30</option><option value="45">45</option>`;
            }

            document.querySelectorAll('input').forEach(input => { input.addEventListener('input', () => { validateInput(input); updateResults(); }); });
            document.getElementById('resetButton').addEventListener('click', () => { if (confirm("Are you sure you want to reset all fields?")) { document.querySelectorAll('input').forEach(input => input.value = ''); updateResults(); } });
        });
    </script>
</body>
</html>
